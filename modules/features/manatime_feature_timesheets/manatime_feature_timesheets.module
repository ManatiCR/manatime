<?php

/**
 * @file
 * Code for the Manatime timesheet feature.
 */

include_once 'manatime_feature_timesheets.features.inc';

/**
 * Implements hook_menu().
 */
function manatime_feature_timesheets_menu() {
  $items = array();

  $items['timesheet/add-new-form/%/%ctools_js'] = array(
    'page callback' => 'manatime_feature_timesheets_add_row_callback',
    'page arguments' => array(2, 3),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_CALLBACK,
  );

  $items['timesheet/remove-row-form/%/%/%ctools_js'] = array(
    'page callback' => 'manatime_feature_timesheets_remove_row_callback',
    'page arguments' => array(2, 3, 4),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_cron().
 */
function manatime_feature_timesheets_cron() {
  // Get the variable wich has the execution time hour.
  $execution_time = variable_get('manatime_feature_timesheets_execution_time', 0);
  // Conditional to evaluate if it is time to execute this function, the
  // function must execute itself the sundays at 21:00:00 hours.
  if (REQUEST_TIME >= $execution_time) {
    // Conditional to set the dates appropriately in case the function is
    // executed manually other day but sunday.
    $beginning = new DateTime('next monday 00:00');
    // Set the $end date by adding it 6 days in timestamp format, stating with
    // $beginning varible.
    $end = $beginning->getTimestamp() + 576000;

    // Set the next time the function will execute itself in timestamp format.
    $next_execution_time = $end;

    // Query to get the id of collaborators users.
    $query = db_select('users_roles', 'ur');
    $query->join('role', 'r', 'r.rid = ur.rid AND r.name = :name', array(
      ':name' => 'collaborator',
    ));
    $query->fields('ur', array('uid'));
    $result = $query->execute();
    // Loop to create a timesheet node for each of the collaborator users.
    while ($record = $result->fetchObject()) {
      // Get the user's id wich a timesheet node will be associated.
      $uid = $record->uid;
      // Create a node associated to the user's id.
      $timesheet = new stdClass();
      $timesheet->title = 'Timesheet from: ' . $beginning->format('F d, Y') . ' to: ' . gmdate('F d, Y', $end);
      $timesheet->type = 'timesheet';
      $timesheet->field_date[LANGUAGE_NONE][0]['value'] = $beginning->format('Y-m-d H:i:s');
      $timesheet->field_date[LANGUAGE_NONE][0]['value2'] = gmdate('Y-m-d H:i:s', $end);
      $timesheet->field_user[LANGUAGE_NONE][0]['target_id'] = $uid;
      node_object_prepare($timesheet);
      node_save($timesheet);
    }
    // Set the varible to the next time the function must execute itself.
    variable_set('manatime_feature_timesheets_execution_time', $next_execution_time);
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function manatime_feature_timesheets_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner === 'ctools' && $plugin_type === 'content_types') {
    return 'plugins/content_types';
  }
  if ($owner === 'ctools' && $plugin_type === 'relationships') {
    return 'plugins/relationships';
  }
}

/**
 * Implements hook_theme().
 */
function manatime_feature_timesheets_theme() {
  return array(
    'timesheet-view' => array(
      'variables' => array(
        'id_timesheet' => '',
        'records' => array(),
        'add_row_link' => '',
      ),
      'template' => 'timesheet-view',
      'path' => drupal_get_path('module', 'manatime_feature_timesheets') . '/themes',
    ),
  );
}

/**
 * Add a new row in the current timesheet.
 */
function manatime_feature_timesheets_add_row_form($form, &$form_state) {
  $timesheet = new Timesheet($form_state['build_info']['args'][0]);
  // Get the list of options to the dropdown project.
  $options_project = timesheet_get_projects_options();
  // Selected default option to the dropdown project.
  $selected = isset($form_state['values']['project']) ? $form_state['values']['project'] : key($options_project);
  $form['project'] = array(
    '#type' => 'select',
    '#title' => t('Project'),
    '#options' => $options_project,
    '#default_value' => $selected,
    '#ajax' => array(
      'callback' => 'refresh_tasks_callback',
      'wrapper' => 'field_task',
    ),
  );
  $form['task'] = array(
    '#type' => 'select',
    '#title' => t('Task'),
    // Create the section to update in the DOM.
    '#prefix' => '<div id="field_task">',
    '#suffix' => '</div>',
    '#options' => timesheet_get_tasks_options($selected, $timesheet),
    '#default_value' => isset($form_state['values']['task']) ? $form_state['values']['task'] : '',
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  return $form;
}

/**
 * Remove a row in the current timesheet.
 */
function manatime_feature_timesheets_remove_row_form($form, &$form_state) {
  $form['alert'] = array(
    '#type' => 'item',
    '#title' => t('Are you sure you want to delete records?.'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Remove'),
  );
  return $form;
}

/**
 * Helper function to make a link add row.
 */
function manatime_feature_timesheet_make_link_add_row($nid) {
  ctools_include('modal');
  ctools_modal_add_js();
  return l(t('Add row'), 'timesheet/add-new-form/' . $nid . '/nojs', array('attributes' => array('class' => 'ctools-use-modal')));
}

/**
 * Helper function to populate the project dropdown.
 */
function timesheet_get_projects_options() {
  $list = array();
  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'projects')
    ->execute();
  if (isset($result['node'])) {
    $nids = array_keys($result['node']);
    $projects = node_load_multiple($nids);
  }
  foreach ($projects as $project) {
    // Get only projects with tasks.
    if (isset($project->field_tasks[LANGUAGE_NONE])) {
      $list[$project->nid] = $project->title;
    }
  }
  return $list;
}

/**
 * Helper function to populate the task dropdown.
 */
function timesheet_get_tasks_options($project_id, $timesheet) {
  $list = array();
  $nids = array();
  $project = node_load($project_id);
  // Get the ids of tasks.
  foreach ($project->field_tasks[LANGUAGE_NONE] as $nid) {
    $nids[] = $nid['target_id'];
  }
  $tasks = node_load_multiple($nids);
  foreach ($tasks as $task) {
    // Get only the tasks not recorded in the reports.
    if (empty($timesheet->getTimeEntriesPerTask($task->nid))) {
      $list[$task->nid] = $task->title;
    }
  }
  return $list;
}

/**
 * Ajax menu callback - Add row.
 */
function manatime_feature_timesheets_add_row_callback($nid, $ajax) {
  if ($ajax) {
    ctools_include('ajax');
    ctools_include('modal');

    $form_state = array(
      'ajax' => TRUE,
      'title' => t('Add new row'),
    );

    $form_state['build_info']['args'] = array($nid);

    // Use ctools to generate ajax instructions for the browser to create
    // a form in a modal popup.
    $output = ctools_modal_form_wrapper('manatime_feature_timesheets_add_row_form', $form_state);

    // If the form has been submitted, there may be additional instructions
    // such as dismissing the modal popup.
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }

    // Return the ajax instructions to the browser via ajax_render().
    print ajax_render($output);
    drupal_exit();
  }
  else {
    return drupal_get_form('manatime_feature_timesheets_add_row_form');
  }
}

/**
 * Ajax menu callback - Remove row.
 */
function manatime_feature_timesheets_remove_row_callback($timesheet_id, $task_id, $ajax) {
  if ($ajax) {
    ctools_include('ajax');
    ctools_include('modal');

    $form_state = array(
      'ajax' => TRUE,
      'title' => t('Remove row'),
    );

    $form_state['build_info']['args'] = array($timesheet_id, $task_id);

    // Use ctools to generate ajax instructions for the browser to create
    // a form in a modal popup.
    $output = ctools_modal_form_wrapper('manatime_feature_timesheets_remove_row_form', $form_state);

    // If the form has been submitted, there may be additional instructions
    // such as dismissing the modal popup.
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }

    // Return the ajax instructions to the browser via ajax_render().
    print ajax_render($output);
    drupal_exit();
  }
  else {
    return drupal_get_form('manatime_feature_timesheets_remove_row_form');
  }
}

/**
 * Update the section to the dropdown task.
 */
function refresh_tasks_callback($form, $form_state) {
  return $form['task'];
}

/**
 * Drupal form submit handler.
 */
function manatime_feature_timesheets_add_row_form_submit(&$form, &$form_state) {
  // Generate the new link using the submitted text value.
  $timesheet = new Timesheet($form_state['build_info']['args'][0]);
  $timesheet->generateRecords();
  $project = entity_metadata_wrapper('node', $form_state['complete form']['project']['#value']);
  $task = entity_metadata_wrapper('node', $form_state['complete form']['task']['#value']);
  $timesheet->addRecord($project->title->value(), $task->title->value());
  $records = $timesheet->getRecords();
  $variables = array(
    'id_timesheet' => $timesheet->getNid(),
    'records' => $records,
    'add_row_link' => manatime_feature_timesheet_make_link_add_row($timesheet->getNid()),
  );
  $markup = theme('timesheet-view', $variables);
  // Tell the browser to close the modal.
  $form_state['ajax_commands'][] = ctools_modal_command_dismiss();
  // Tell the browser to replace the old link with the new one.
  $form_state['ajax_commands'][] = ajax_command_replace('#time-entries-main', $markup);
}

/**
 * Drupal form submit handler.
 */
function manatime_feature_timesheets_remove_row_form_submit(&$form, &$form_state) {
  $timesheet = new Timesheet($form_state['build_info']['args'][0]);
  $timesheet->generateRecords();
  $timesheet->removeRecord($form_state['build_info']['args'][1]);
  $timesheet->generateRecords();
  $records = $timesheet->getRecords();
  $variables = array(
    'id_timesheet' => $timesheet->getNid(),
    'records' => $records,
    'add_row_link' => manatime_feature_timesheet_make_link_add_row($timesheet->getNid()),
  );
  $markup = theme('timesheet-view', $variables);
  // Tell the browser to close the modal.
  $form_state['ajax_commands'][] = ctools_modal_command_dismiss();
  // Tell the browser to replace the old link with the new one.
  $form_state['ajax_commands'][] = ajax_command_replace('#time-entries-main', $markup);
}
